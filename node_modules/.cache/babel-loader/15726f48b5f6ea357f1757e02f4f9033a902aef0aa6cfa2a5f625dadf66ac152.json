{"ast":null,"code":"var _jsxFileName = \"/Applications/code/React/trip-planner-app/src/Pages/home.js\";\n// import React, { useState, useEffect } from \"react\";\n// import './home.css';\n// import '../components/header';\n\n// function TypingText({ text, speed, onComplete, boldText }) {\n//   const [displayedText, setDisplayedText] = useState(\"\");\n//   const [index, setIndex] = useState(0);\n//   const [showCursor, setShowCursor] = useState(true);\n//   const [isTyping, setIsTyping] = useState(false);\n\n//   useEffect(() => {\n//     // Step 1: Blink cursor 3 times (1.5 seconds) before typing starts\n//     const blinkInterval = setInterval(() => {\n//       setShowCursor((prev) => !prev);\n//     }, 300);\n\n//     const startTypingTimeout = setTimeout(() => {\n//       clearInterval(blinkInterval); // Stop blinking\n//       setShowCursor(true);\n//       setIsTyping(true); // Start typing\n//     }, 1500);\n\n//     return () => {\n//       clearTimeout(startTypingTimeout);\n//       clearInterval(blinkInterval);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // Step 2: Start typing effect after blinking\n//     if (isTyping && index < text.length) {\n//       const timeout = setTimeout(() => {\n//         setDisplayedText((prev) => prev + text[index]);\n//         setIndex(index + 1);\n//       }, speed);\n\n//       return () => clearTimeout(timeout);\n//     } else if (index === text.length) {\n//       setTimeout(() => setShowCursor(false), 500); // Hide cursor after typing is done\n//       if (onComplete) onComplete();\n//     }\n//   }, [index, text, speed, isTyping, onComplete]);\n\n//   return (\n//     <span className=\"typing-text\">\n//       <span className=\"bold-text\">{displayedText.substring(0, boldText.length)}</span>\n//       <span className=\"normal-text\">{displayedText.substring(boldText.length)}</span>\n//       {showCursor && <span className=\"cursor\">|</span>}\n//     </span>\n//   );\n// }\n\n// function Home() {\n//   return (\n//     <div className=\"home\">\n//       <header /> {/* Added Header here */}\n//       <div className=\"hero\">\n//         <div className=\"text-section\">\n//           <TypingText\n//             text={`Hi, my \\nname is Robb.\\n\\nI'm an independent creative developer from \\nAbergavenny, South Wales.`}\n//             speed={50}\n//             boldText=\"Hi, my \\nname is Robb.\"\n//           />\n//         </div>\n\n//         <div className=\"image-section\">\n//           <img src=\"/avatar.png\" alt=\"Avatar\" className=\"avatar\" />\n//         </div>\n//       </div>\n//       {/* <div className=\"scroll-text\">SCROLL</div> */}\n//     </div>\n//   );\n// }\n\n// export default Home;\n\nimport React from \"react\";\nimport \"./home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Home","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Applications/code/React/trip-planner-app/src/Pages/home.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import './home.css';\n// import '../components/header';\n\n// function TypingText({ text, speed, onComplete, boldText }) {\n//   const [displayedText, setDisplayedText] = useState(\"\");\n//   const [index, setIndex] = useState(0);\n//   const [showCursor, setShowCursor] = useState(true);\n//   const [isTyping, setIsTyping] = useState(false);\n\n//   useEffect(() => {\n//     // Step 1: Blink cursor 3 times (1.5 seconds) before typing starts\n//     const blinkInterval = setInterval(() => {\n//       setShowCursor((prev) => !prev);\n//     }, 300);\n\n//     const startTypingTimeout = setTimeout(() => {\n//       clearInterval(blinkInterval); // Stop blinking\n//       setShowCursor(true);\n//       setIsTyping(true); // Start typing\n//     }, 1500);\n\n//     return () => {\n//       clearTimeout(startTypingTimeout);\n//       clearInterval(blinkInterval);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // Step 2: Start typing effect after blinking\n//     if (isTyping && index < text.length) {\n//       const timeout = setTimeout(() => {\n//         setDisplayedText((prev) => prev + text[index]);\n//         setIndex(index + 1);\n//       }, speed);\n\n//       return () => clearTimeout(timeout);\n//     } else if (index === text.length) {\n//       setTimeout(() => setShowCursor(false), 500); // Hide cursor after typing is done\n//       if (onComplete) onComplete();\n//     }\n//   }, [index, text, speed, isTyping, onComplete]);\n\n//   return (\n//     <span className=\"typing-text\">\n//       <span className=\"bold-text\">{displayedText.substring(0, boldText.length)}</span>\n//       <span className=\"normal-text\">{displayedText.substring(boldText.length)}</span>\n//       {showCursor && <span className=\"cursor\">|</span>}\n//     </span>\n//   );\n// }\n\n// function Home() {\n//   return (\n//     <div className=\"home\">\n//       <header /> {/* Added Header here */}\n//       <div className=\"hero\">\n//         <div className=\"text-section\">\n//           <TypingText\n//             text={`Hi, my \\nname is Robb.\\n\\nI'm an independent creative developer from \\nAbergavenny, South Wales.`}\n//             speed={50}\n//             boldText=\"Hi, my \\nname is Robb.\"\n//           />\n//         </div>\n\n//         <div className=\"image-section\">\n//           <img src=\"/avatar.png\" alt=\"Avatar\" className=\"avatar\" />\n//         </div>\n//       </div>\n//       {/* <div className=\"scroll-text\">SCROLL</div> */}\n//     </div>\n//   );\n// }\n\n// export default Home;\n\n\nimport React from \"react\";\nimport \"./home.css\";\n\nfunction Home() {\n  return (\n    <div className=\"home-container\">\n      {/* Content goes here */}\n    </div>\n  );\n}\n\nexport default Home;\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EACd,oBACED,OAAA;IAAKE,SAAS,EAAC;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1B,CAAC;AAEV;AAACC,EAAA,GANQN,IAAI;AAQb,eAAeA,IAAI;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}